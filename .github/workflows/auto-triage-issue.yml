name: Auto Triage New Issue

on:
  issues:
    types: [opened]

jobs:
  triage:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write # ✅ needed to create branches

    steps:
      - name: Add default "needs-triage" label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: needs-triage

      - name: Auto-comment with next steps
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            👋 Thanks for opening this issue!

            Our team will review this shortly. In the meantime:
            - Please make sure to fill out all required sections of the issue template.
            - If it's a bug report, include steps to reproduce, expected vs actual results, and logs/screenshots if available.

            ⏳ We'll label and assign this issue soon.

      - name: Auto-assign triage user or team
        uses: pozil/auto-assign-issue@v1
        with:
          assignees: bibhu2020
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply labels based on issue content and create branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            const body = issue.body.toLowerCase();
            const issueNumber = issue.number;
            const labels = [];

            const isBug = title.includes('bug') || body.includes('error');
            const isFeature = title.includes('feature') || body.includes('enhancement');

            if (isBug) {
              labels.push('bug');
            }

            if (isFeature) {
              labels.push('enhancement');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels,
              });
            }

            // ✅ Format branch name
            const branchType = isBug ? 'hotfix' : isFeature ? 'feature' : null;
            if (!branchType) {
              console.log("Not a bug or feature, skipping branch creation.");
              return;
            }

            const titleSlug = issue.title
              .toLowerCase()
              .replace(/[^a-z0-9]+/g, '-')   // Replace non-alphanumerics with hyphen
              .replace(/^-+|-+$/g, '')        // Trim leading/trailing hyphens
              .substring(0, 10);

            const newBranch = `${branchType}/${issueNumber}-${titleSlug}`;

            // ✅ Get latest commit SHA on main
            const mainRef = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
            });

            const mainSha = mainRef.data.commit.sha;

            // ✅ Create the new branch
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${newBranch}`,
              sha: mainSha,
            });

            console.log(`Branch '${newBranch}' created from 'main'.`);

            // Optional: comment on the issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `🚀 Branch \`${newBranch}\` created from \`main\`. You can start work on this now.`
            });
